{"version":3,"file":"static/js/351.ef092a19.chunk.js","mappings":"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","sources":["components/GenerateWallpapers.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, useSearchParams } from \"react-router-dom\";\r\nimport AOS from \"aos\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport filtersicon from \"../assets/UDImages/settings.png\";\r\nimport closeicon from \"../assets/UDImages/cross.png\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst GenerateWallpapers = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [filteredImages, setFilteredImages] = useState([]);\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const filter = searchParams.get(\"filter\") || \"all\";\r\n\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n      once: true,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(\"/images.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setImages(data);\r\n        setFilteredImages(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erreur lors de la récupération des images:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const newFilteredImages =\r\n      filter === \"all\"\r\n        ? images\r\n        : images.filter((image) => image.category === filter);\r\n    setFilteredImages(newFilteredImages);\r\n    setTimeout(() => setLoading(false), 600);\r\n  }, [filter, images]);\r\n\r\n  const photos = filteredImages.map((image) => ({\r\n    src: image.src,\r\n    name: image.name || image.src,\r\n    width: 0.2,\r\n    height: 0.4,\r\n  }));\r\n\r\n  const renderImageWithButton = (photo) => {\r\n    return (\r\n      <div className=\"wallpaper-item\" key={photo.name} data-aos=\"fade-up\">\r\n        <img key={photo.src} src={photo.src} alt={photo.src} />\r\n        <NavLink to={`/ArtworkDetails/${photo.name}`} className=\"get-button\">\r\n          Get this one\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"wallpapers-container\">\r\n      <div className=\"filter-button-box\">\r\n        <button\r\n          className=\"toggle-filters-button\"\r\n          onClick={() => setShowFilters(!showFilters)}\r\n        >\r\n          <span>Filters</span>\r\n          <img\r\n            src={showFilters ? closeicon : filtersicon}\r\n            className={showFilters ? \"rotated\" : \"\"}\r\n            alt=\"set filters\"\r\n          />\r\n        </button>\r\n      </div>\r\n\r\n      {showFilters && (\r\n        <div className=\"filters\" data-aos=\"fade-up\">\r\n          <button\r\n            className={`filter-button ${filter === \"all\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSearchParams({ filter: \"all\" })}\r\n          >\r\n            <span>All</span>\r\n          </button>\r\n          <button\r\n            className={`filter-button ${\r\n              filter === \"One Piece\" ? \"active\" : \"\"\r\n            }`}\r\n            onClick={() => setSearchParams({ filter: \"One Piece\" })}\r\n          >\r\n            <span>One Piece</span>\r\n          </button>\r\n          <button\r\n            className={`filter-button ${filter === \"Bluelock\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSearchParams({ filter: \"Bluelock\" })}\r\n          >\r\n            <span>Bluelock</span>\r\n          </button>\r\n\r\n          <button\r\n            className={`filter-button ${\r\n              filter === \"DemonSlayer\" ? \"active\" : \"\"\r\n            }`}\r\n            onClick={() => setSearchParams({ filter: \"DemonSlayer\" })}\r\n          >\r\n            <span>Demon Slayer</span>\r\n          </button>\r\n\r\n          <button\r\n            className={`filter-button ${filter === \"Dandadan\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSearchParams({ filter: \"Dandadan\" })}\r\n          >\r\n            <span>Dandadan</span>\r\n          </button>\r\n\r\n          <button\r\n            className={`filter-button ${filter === \"HxH\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSearchParams({ filter: \"HxH\" })}\r\n          >\r\n            <span>Hunter x Hunter</span>\r\n          </button>\r\n          <button\r\n            className={`filter-button ${filter === \"JJK\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSearchParams({ filter: \"JJK\" })}\r\n          >\r\n            <span>Jujutsu Kaisen</span>\r\n          </button>\r\n          <button\r\n            className={`filter-button ${\r\n              filter === \"Solo Leveling\" ? \"active\" : \"\"\r\n            }`}\r\n            onClick={() => setSearchParams({ filter: \"Solo Leveling\" })}\r\n          >\r\n            <span>Solo Leveling</span>\r\n          </button>\r\n          <button\r\n            className={`filter-button ${filter === \"Arcane\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSearchParams({ filter: \"Arcane\" })}\r\n          >\r\n            <span>Arcane | League</span>\r\n          </button>\r\n          <button\r\n            className={`filter-button ${filter === \"Variety\" ? \"active\" : \"\"}`}\r\n            onClick={() => setSearchParams({ filter: \"Variety\" })}\r\n          >\r\n            <span>Others</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"wallpapers-grid\">\r\n          <Gallery\r\n            style={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            photos={photos}\r\n            renderImage={({ photo, index }) => renderImageWithButton(photo)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateWallpapers;\r\n"],"names":["GenerateWallpapers","images","setImages","useState","filteredImages","setFilteredImages","showFilters","setShowFilters","loading","setLoading","searchParams","setSearchParams","useSearchParams","filter","get","useEffect","AOS","duration","once","fetch","then","response","json","data","catch","error","console","newFilteredImages","image","category","setTimeout","photos","map","src","name","width","height","_jsxs","className","children","_jsx","onClick","closeicon","filtersicon","alt","Loader","Gallery","style","display","flexWrap","justifyContent","renderImage","_ref","photo","index","NavLink","to","renderImageWithButton"],"sourceRoot":""}